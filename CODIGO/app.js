const state={user:null};
const routes={"/":vHome,"/register":vRegister,"/login":vLogin,"/dashboard":vDashboard,"/admin/users":vAdminUsers,"/admin/users/edit":vAdminEdit};
const DB_KEY="um_users_v1";const SESSION_KEY="um_session_v1";
function loadUsers(){try{return JSON.parse(localStorage.getItem(DB_KEY))||[]}catch{return[]}}
function saveUsers(l){localStorage.setItem(DB_KEY,JSON.stringify(l))}
async function sha256(t){const e=new TextEncoder().encode(t);const r=await crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(r)).map(b=>b.toString(16).padStart(2,"0")).join("")}
function getSession(){try{return JSON.parse(localStorage.getItem(SESSION_KEY))}catch{return null}}
function setSession(u){localStorage.setItem(SESSION_KEY,JSON.stringify(u))}
function clearSession(){localStorage.removeItem(SESSION_KEY)}
async function ensureAdmin(){const u=loadUsers();const e="admin@admin.com";if(!u.some(x=>x.email===e)){const h=await sha256("Admin@123456");u.push({id:crypto.randomUUID(),name:"Admin",email:e,passwordHash:h,cep:"",state:"",city:"",role:"ADMIN",createdAt:new Date().toISOString()});saveUsers(u)}}
function validatePassword(p){const r=[[/.{8,}/,"Mínimo de 8 caracteres"],(/[A-Z]/.test(p)?true:[null,"Pelo menos 1 maiúscula"]),(/[a-z]/.test(p)?true:[null,"Pelo menos 1 minúscula"]),(/[0-9]/.test(p)?true:[null,"Pelo menos 1 número"]),(/[^A-Za-z0-9]/.test(p)?true:[null,"Pelo menos 1 símbolo"])];const e=r.filter(x=>x!==true&&!x[0]).map(x=>x[1]);return{ok:e.length===0,errors:e}}
async function fetchCep(c){const n=(c||"").replace(/\D/g,"");if(n.length!==8)throw new Error("CEP inválido");const res=await fetch(`https://viacep.com.br/ws/${n}/json/`);if(!res.ok)throw new Error("Falha ViaCEP");const d=await res.json();if(d.erro)throw new Error("CEP não encontrado");return{state:d.uf||"",city:d.localidade||"",street:d.logradouro||""}}
function elView(){return document.getElementById("view")}
function setNav(){const nl=document.getElementById("nav-login");const nd=document.getElementById("nav-dash");const na=document.getElementById("nav-admin");const lo=document.getElementById("btn-logout");const u=state.user;if(u){nl.classList.add("hidden");nd.classList.remove("hidden");lo.classList.remove("hidden");if(u.role==="ADMIN")na.classList.remove("hidden");else na.classList.add("hidden")}else{nl.classList.remove("hidden");nd.classList.add("hidden");na.classList.add("hidden");lo.classList.add("hidden")}}
function html(s,...v){return s.reduce((a,x,i)=>a+x+(v[i]??""),"")}
function toast(msg,type="ok"){const t=document.getElementById("toast");t.textContent=msg;t.className="toast show "+type;setTimeout(()=>{t.classList.remove("show")},2200)}
function vHome(){elView().innerHTML=html`<div class="card grid two"><div><h2>Comece agora</h2><p class="hint">Crie uma conta, faça login e explore a área autenticada.</p><div class="form-actions"><a class="btn primary" href="#/register">Criar conta</a><a class="btn" href="#/login">Entrar</a></div></div><div><h2>Admin</h2><p class="hint">Acesse a lista de usuários, edite nomes e exclua contas.</p><div class="form-actions"><a class="btn" href="#/admin/users">Abrir painel</a></div></div></div>`}
function vRegister(){elView().innerHTML=html`<div class="card"><h2>Novo cadastro</h2><form id="freg" class="grid two"><div><label>Nome</label><input name="name" placeholder="Seu nome"/></div><div><label>E-mail</label><input name="email" placeholder="email@exemplo.com"/></div><div><label>Senha</label><input type="password" name="password" placeholder="Crie uma senha forte"/></div><div><label>CEP</label><input name="cep" id="reg-cep" placeholder="00000000"/></div><div><label>Estado</label><input name="state" id="reg-state" placeholder="UF"/></div><div><label>Cidade</label><input name="city" id="reg-city" placeholder="Cidade"/></div><div class="form-actions"><button class="btn primary" type="submit">Cadastrar</button><span class="hint">Regras: 8+ com maiúscula, minúscula, número e símbolo.</span></div><div id="reg-msg" class="err"></div></form></div>`;const f=document.getElementById("freg");const cep=document.getElementById("reg-cep");cep.addEventListener("blur",async e=>{const v=e.target.value;try{const {state,city}=await fetchCep(v);document.getElementById("reg-state").value=state;document.getElementById("reg-city").value=city}catch{}});f.addEventListener("submit",async e=>{e.preventDefault();const fd=new FormData(f);const name=String(fd.get("name")||"").trim();const email=String(fd.get("email")||"").trim().toLowerCase();const password=String(fd.get("password")||"");const cep=String(fd.get("cep")||"").trim();const uf=String(fd.get("state")||"").trim();const city=String(fd.get("city")||"").trim();const msg=document.getElementById("reg-msg");msg.textContent="";if(name.length<2){msg.textContent="Nome muito curto";return}if(!/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(email)){msg.textContent="E-mail inválido";return}const pr=validatePassword(password);if(!pr.ok){msg.textContent=pr.errors.join(" • ");return}const users=loadUsers();if(users.some(u=>u.email===email)){msg.textContent="E-mail já cadastrado";return}const hash=await sha256(password);users.push({id:crypto.randomUUID(),name,email,passwordHash:hash,cep, state:uf, city,role:"USER",createdAt:new Date().toISOString()});saveUsers(users);toast("Cadastro realizado","ok");location.hash="#/login?registered=1"})}
function vLogin(){const s=new URLSearchParams(location.hash.split("?")[1]||"");const reg=s.get("registered");elView().innerHTML=html`<div class="card"><h2>Entrar</h2>${reg?'<p class="success">Cadastro realizado! Faça login.</p>':""}<form id="flogin" class="grid two"><div><label>E-mail</label><input name="email" placeholder="email@exemplo.com"/></div><div><label>Senha</label><input type="password" name="password" placeholder="Sua senha"/></div><div class="form-actions"><button class="btn primary" type="submit">Entrar</button></div><div id="login-msg" class="err"></div></form></div>`;const f=document.getElementById("flogin");f.addEventListener("submit",async e=>{e.preventDefault();const fd=new FormData(f);const email=String(fd.get("email")||"").trim().toLowerCase();const password=String(fd.get("password")||"");const msg=document.getElementById("login-msg");msg.textContent="";const users=loadUsers();const user=users.find(u=>u.email===email);if(!user){msg.textContent="Credenciais inválidas";toast("Falha no login","err");return}const hash=await sha256(password);if(hash!==user.passwordHash){msg.textContent="Credenciais inválidas";toast("Falha no login","err");return}setSession({id:user.id,name:user.name,email:user.email,role:user.role});state.user=getSession();setNav();toast("Bem-vindo","ok");location.hash="#/dashboard"})}
function requireAuth(){if(!state.user){location.hash="#/login";return false}return true}
function vDashboard(){if(!requireAuth())return;const users=loadUsers();const me=users.find(u=>u.id===state.user.id);elView().innerHTML=html`<div class="grid two"><div class="card"><h2>Bem-vindo, ${me.name}</h2><p class="hint">Esta é sua área autenticada.</p><div class="kv"><div class="k">Nome</div><div>${me.name}</div><div class="k">E-mail</div><div>${me.email}</div><div class="k">CEP</div><div>${me.cep||"-"}</div><div class="k">Estado</div><div>${me.state||"-"}</div><div class="k">Cidade</div><div>${me.city||"-"}</div><div class="k">Função</div><div><span class="badge">${me.role}</span></div></div></div><div class="card"><h2>Acesso rápido</h2><div class="actions-inline"><a class="btn" href="#/admin/users">Abrir painel admin</a></div><p class="hint">Apenas administradores conseguem acessar o painel.</p></div></div>`}
function requireAdmin(){if(!requireAuth())return false;if(state.user.role!=="ADMIN"){location.hash="#/dashboard";return false}return true}
function vAdminUsers(){if(!requireAdmin())return;const users=loadUsers();elView().innerHTML=html`<div class="card"><h2>Usuários (${users.length})</h2><table class="table"><thead><tr><th>Nome</th><th>E-mail</th><th>Cidade/UF</th><th>Função</th><th>Ações</th></tr></thead><tbody id="tbody-users">${users.map(u=>`<tr><td>${u.name}</td><td>${u.email}</td><td>${(u.city||"-")} / ${(u.state||"-")}</td><td><span class="badge">${u.role}</span></td><td><a class="link" href="#/admin/users/edit?id=${u.id}">Editar</a>${u.role==="ADMIN"?"":` | <a class="link" data-del="${u.id}" href="javascript:void(0)">Excluir</a>`}</td></tr>`).join("")}</tbody></table></div>`;document.querySelectorAll("[data-del]").forEach(el=>{el.addEventListener("click",e=>{const id=e.target.getAttribute("data-del");const list=loadUsers();const user=list.find(u=>u.id===id);if(!user)return;if(!confirm(`Excluir usuário ${user.email}?`))return;saveUsers(list.filter(u=>u.id!==id));toast("Usuário excluído","ok");vAdminUsers()})})}
function vAdminEdit(){if(!requireAdmin())return;const s=new URLSearchParams(location.hash.split("?")[1]||"");const id=s.get("id");const users=loadUsers();const user=users.find(u=>u.id===id);if(!user){elView().innerHTML=`<div class="card">Usuário não encontrado.</div>`;return}elView().innerHTML=html`<div class="card"><h2>Editar usuário</h2><form id="fedit" class="grid two"><div><label>Nome</label><input name="name" value="${user.name}"/></div><div class="form-actions"><button class="btn primary" type="submit">Salvar</button><a class="btn" href="#/admin/users">Voltar</a></div><div id="edit-msg" class="err"></div></form></div>`;document.getElementById("fedit").addEventListener("submit",e=>{e.preventDefault();const fd=new FormData(e.target);const name=String(fd.get("name")||"").trim();if(!name){document.getElementById("edit-msg").textContent="Nome obrigatório";return}user.name=name;saveUsers(users);toast("Alterações salvas","ok");location.hash="#/admin/users"})}
function router(){state.user=getSession();setNav();const path=location.hash.replace(/^#/,"")||"/";const pathname=path.split("?")[0];(routes[pathname]||vHome)()}
window.addEventListener("hashchange",router);
window.addEventListener("load",async()=>{await ensureAdmin();document.getElementById("btn-logout").addEventListener("click",()=>{clearSession();state.user=null;setNav();toast("Sessão encerrada","ok");location.hash="#/"});router()});
